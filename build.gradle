plugins {
	id 'com.matthewprenger.cursegradle' version '1.+'
	id 'com.modrinth.minotaur' version '2.+'
	id 'fabric-loom' version '1.+'
	id 'io.github.juuxel.loom-quiltflower' version 'latest.release'
}

apply from: 'mods.gradle'

javaVersion = 8 // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
loader = 'fabric'
gameVersion = '1.8.9'

/******************/
/** Dependencies **/
/******************/

repositories {
	maven { url 'https://maven.legacyfabric.net/' }
	maven { url 'https://api.modrinth.com/maven'; content { includeGroup 'maven.modrinth' } }
	maven { url "https://moehreag.duckdns.org/maven/snapshots" }
	maven { url 'https://maven.gegy.dev' }
	maven { url 'https://maven.quiltmc.org/repository/release' }
	maven { url 'https://maven.shedaniel.me' }
	maven { url 'https://maven.terraformersmc.com' }
	maven { url 'https://storage.googleapis.com/devan-maven' }
}

dependencies {
	
	// Fabric API
	modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:1.8.0+1.8.9"

	// Fabric Loader
	modImplementation 'net.fabricmc:fabric-loader:latest.release'

	mappings libs.yarn

	// Minecraft
	minecraft "com.mojang:minecraft:$gameVersion"

	modImplementation include('io.github.axolotlclient:AxolotlClient-config:1.0.12-beta.1+1.8.9')

	implementation(include("it.unimi.dsi:fastutil:8.5.9"))

	modApi files("libs/legacy-modmenu-1.1.1-dev.jar")
}

// Fix netty with Java 17+ (be happy if it didn't break for you)
configurations.all {
	resolutionStrategy {
		dependencySubstitution {
			substitute module('io.netty:netty-all:4.0.23.Final') with module('io.netty:netty-all:4.0.25.Final')
		}
		force 'io.netty:netty-all:4.0.25.Final'
	}
}

/************************/
/** Java Archive (JAR) **/
/************************/

group = 'com.github.startsmercury'
archivesBaseName = 'simply-no-shading'
version = "5.0.5+$gameVersion"

processResources {
	inputs.property 'version', version

	filesMatching 'fabric.mod.json', {
		expand version: version
	}
}

java {
	withJavadocJar()
	withSourcesJar()
}

jar {
	from 'LICENSE', {
		rename { "${it}_$project.archivesBaseName" }
	}
}

/************************/
/** Java Compatibility **/
/************************/

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType JavaCompile configureEach {
	options.release = project.ext.javaVersion
}

/****************/
/** Publishing **/
/****************/

import com.modrinth.minotaur.dependencies.ModDependency

final def versionPart = version.split(/\+/)[0]
final def versionNameParts = versionPart.split('-').with { it.size() == 2 ? [ it[0], *it[1].split(/\./) ] : it }.tap {
	if (it.size() == 1) return

	switch (it[1]) {
	case 'rc':
		it[1] = 'Release Candidate'
		break
	case 'pre':
		it[1] = 'Pre-Release'
		break
	case 'snapshot':
		it[1] = 'Snapshot'
		break
	}
}
final def versionNamePart = versionNameParts.join ' '
final def publishing = [
	version: [
		changelog: "**View the changelog at**: https://github.com/${System.getenv 'GITHUB_REPOSITORY'}/wiki/Changelog#${versionPart.replace '.', ''}",
		name: "$versionNamePart for Minecraft $gameVersion",
		number: version,
		type: versionNameParts.with {
			switch (it.size() == 1 ? 'Release' : it[1]) {
			case 'Release':
				return 'release'
			case 'Release Candidate':
			case 'Pre-Release':
				return 'beta'
			default:
				return 'alpha'
			}
		}
	]
]

curseforge {
	apiKey = System.getenv('CURSEFORGE_API_KEY') ?: ''

	project {
		id = '550997'
		changelogType = 'markdown'
		changelog = publishing.version.changelog
		relations {
			optionalDependency 'bedrockify'
			optionalDependency 'enhanced-block-entities'
			optionalDependency 'fabric-api'
			optionalDependency 'irisshaders'
			optionalDependency 'modmenu'
			optionalDependency 'sodium'
		}
		addGameVersion gameVersion
		addGameVersion "Java $javaVersion"
		addGameVersion loader.toLowerCase().with {
			switch (it) {
				case 'fabric':
					return 'Fabric'
				case 'forge':
					return 'Forge'
				case 'quilt':
					return 'Quilt'
				case 'rift':
					return 'Rift'
				default:
					return it
			}
		}
		releaseType = publishing.version.type

		mainArtifact remapJar, {
			displayName = publishing.version.name
		}
		addArtifact javadocJar
		addArtifact remapSourcesJar

		afterEvaluate {
			uploadTask.dependsOn 'javadocJar', 'remapJar', 'remapSourcesJar'
		}
	}

	options {
		forgeGradleIntegration = false
	}
}

modrinth {
	token = System.getenv 'MODRINTH_TOKEN'
	projectId = '9gx5Xvc5'
	versionName = publishing.version.name
	versionNumber = publishing.version.number
	changelog = publishing.version.changelog
	dependencies = [
		new ModDependency('ox3rDp1B', 'optional'),
		new ModDependency('OVuFYfre', 'optional'),
		new ModDependency('P7dR8mSH', 'optional'),
		new ModDependency('YL57xq9U', 'optional'),
		new ModDependency('mOgUt4GM', 'optional'),
		new ModDependency('AANobbMI', 'optional')
	]
	gameVersions = [ gameVersion ]
	versionType = publishing.version.type
	loaders = [ loader ]
	uploadFile = remapJar
	additionalFiles = [ remapSourcesJar ]
}
